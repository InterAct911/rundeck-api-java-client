<api>
<package name="org.rundeck.api"
>
<interface name="ApiPathBuilder.BuildsParameters"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="buildParameters"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="builder" type="org.rundeck.api.ApiPathBuilder">
</parameter>
<parameter name="doPost" type="boolean">
</parameter>
</method>
</interface>
<class name="DefaultJobsImport"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.RundeckJobsImport">
</implements>
<constructor name="DefaultJobsImport"
 type="org.rundeck.api.DefaultJobsImport"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getFileType"
 return="org.rundeck.api.FileType"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getImportMethod"
 return="org.rundeck.api.domain.RundeckJobsImportMethod"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getProject"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStream"
 return="java.io.InputStream"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUuidImportBehavior"
 return="org.rundeck.api.domain.RundeckJobsUUIDImportBehavior"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setFileType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fileType" type="org.rundeck.api.FileType">
</parameter>
</method>
<method name="setImportMethod"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="importMethod" type="org.rundeck.api.domain.RundeckJobsImportMethod">
</parameter>
</method>
<method name="setProject"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
</method>
<method name="setStream"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
</method>
<method name="setUuidImportBehavior"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="uuidImportBehavior" type="org.rundeck.api.domain.RundeckJobsUUIDImportBehavior">
</parameter>
</method>
</class>
<class name="FileType"
 extends="java.lang.Enum"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="org.rundeck.api.FileType"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="org.rundeck.api.FileType[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="NodeFiltersBuilder"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="NodeFiltersBuilder"
 type="org.rundeck.api.NodeFiltersBuilder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="excludeHostname"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hostname" type="java.lang.String">
</parameter>
</method>
<method name="excludeName"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="excludeOsArch"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="osArch" type="java.lang.String">
</parameter>
</method>
<method name="excludeOsFamily"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="osFamily" type="java.lang.String">
</parameter>
</method>
<method name="excludeOsName"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="osName" type="java.lang.String">
</parameter>
</method>
<method name="excludeOsVersion"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="osVersion" type="java.lang.String">
</parameter>
</method>
<method name="excludePrecedence"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="excludePrecedence" type="boolean">
</parameter>
</method>
<method name="excludeTags"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tags" type="java.lang.String">
</parameter>
</method>
<method name="excludeType"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.String">
</parameter>
</method>
<method name="hostname"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hostname" type="java.lang.String">
</parameter>
</method>
<method name="name"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="osArch"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="osArch" type="java.lang.String">
</parameter>
</method>
<method name="osFamily"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="osFamily" type="java.lang.String">
</parameter>
</method>
<method name="osName"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="osName" type="java.lang.String">
</parameter>
</method>
<method name="osVersion"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="osVersion" type="java.lang.String">
</parameter>
</method>
<method name="tags"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tags" type="java.lang.String">
</parameter>
</method>
<method name="toProperties"
 return="java.util.Properties"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="type"
 return="org.rundeck.api.NodeFiltersBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.String">
</parameter>
</method>
</class>
<class name="OptionsBuilder"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="OptionsBuilder"
 type="org.rundeck.api.OptionsBuilder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addOption"
 return="org.rundeck.api.OptionsBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.Object">
</parameter>
<parameter name="value" type="java.lang.Object">
</parameter>
</method>
<method name="toProperties"
 return="java.util.Properties"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="RunAdhoc"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getAsUser"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNodeFilters"
 return="java.util.Properties"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNodeKeepgoing"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNodeThreadcount"
 return="java.lang.Integer"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getProject"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<interface name="RunAdhocCommand"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.RunAdhoc">
</implements>
<method name="getCommand"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="RunAdhocCommandBuilder"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RunAdhocCommandBuilder"
 type="org.rundeck.api.RunAdhocCommandBuilder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="build"
 return="org.rundeck.api.RunAdhocCommand"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="builder"
 return="org.rundeck.api.RunAdhocCommandBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAsUser"
 return="org.rundeck.api.RunAdhocCommandBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="asUser" type="java.lang.String">
</parameter>
</method>
<method name="setCommand"
 return="org.rundeck.api.RunAdhocCommandBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="commandString" type="java.lang.String">
</parameter>
</method>
<method name="setNodeFilters"
 return="org.rundeck.api.RunAdhocCommandBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="nodeFilters" type="java.util.Properties">
</parameter>
</method>
<method name="setNodeKeepgoing"
 return="org.rundeck.api.RunAdhocCommandBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="nodeKeepgoing" type="java.lang.Boolean">
</parameter>
</method>
<method name="setNodeThreadcount"
 return="org.rundeck.api.RunAdhocCommandBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="nodeThreadcount" type="java.lang.Integer">
</parameter>
</method>
<method name="setProject"
 return="org.rundeck.api.RunAdhocCommandBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
</method>
</class>
<interface name="RunAdhocScript"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.RunAdhoc">
</implements>
<method name="getArgString"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getInterpreterArgsQuoted"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getScript"
 return="java.io.InputStream"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getScriptInterpreter"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="RunAdhocScriptBuilder"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RunAdhocScriptBuilder"
 type="org.rundeck.api.RunAdhocScriptBuilder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="oldScript" type="org.rundeck.api.RunAdhocScript">
</parameter>
</constructor>
<method name="build"
 return="org.rundeck.api.RunAdhocScript"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="builder"
 return="org.rundeck.api.RunAdhocScriptBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="builder"
 return="org.rundeck.api.RunAdhocScriptBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="script" type="org.rundeck.api.RunAdhocScript">
</parameter>
</method>
<method name="setArgString"
 return="org.rundeck.api.RunAdhocScriptBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="argString" type="java.lang.String">
</parameter>
</method>
<method name="setAsUser"
 return="org.rundeck.api.RunAdhocScriptBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="asUser" type="java.lang.String">
</parameter>
</method>
<method name="setInterpreterArgsQuoted"
 return="org.rundeck.api.RunAdhocScriptBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="interpreterArgsQuoted" type="java.lang.Boolean">
</parameter>
</method>
<method name="setNodeFilters"
 return="org.rundeck.api.RunAdhocScriptBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="nodeFilters" type="java.util.Properties">
</parameter>
</method>
<method name="setNodeKeepgoing"
 return="org.rundeck.api.RunAdhocScriptBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="nodeKeepgoing" type="java.lang.Boolean">
</parameter>
</method>
<method name="setNodeThreadcount"
 return="org.rundeck.api.RunAdhocScriptBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="nodeThreadcount" type="java.lang.Integer">
</parameter>
</method>
<method name="setProject"
 return="org.rundeck.api.RunAdhocScriptBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
</method>
<method name="setScript"
 return="org.rundeck.api.RunAdhocScriptBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
</method>
<method name="setScriptInterpreter"
 return="org.rundeck.api.RunAdhocScriptBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scriptInterpreter" type="java.lang.String">
</parameter>
</method>
</class>
<interface name="RunJob"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getAsUser"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getJobId"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNodeFilters"
 return="java.util.Properties"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOptions"
 return="java.util.Properties"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="RunJobBuilder"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RunJobBuilder"
 type="org.rundeck.api.RunJobBuilder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="build"
 return="org.rundeck.api.RunJob"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="builder"
 return="org.rundeck.api.RunJobBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAsUser"
 return="org.rundeck.api.RunJobBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="asUser" type="java.lang.String">
</parameter>
</method>
<method name="setJobId"
 return="org.rundeck.api.RunJobBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobId" type="java.lang.String">
</parameter>
</method>
<method name="setNodeFilters"
 return="org.rundeck.api.RunJobBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="nodeFilters" type="java.util.Properties">
</parameter>
</method>
<method name="setOptions"
 return="org.rundeck.api.RunJobBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="options" type="java.util.Properties">
</parameter>
</method>
</class>
<class name="RundeckApiException"
 extends="java.lang.RuntimeException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckApiException"
 type="org.rundeck.api.RundeckApiException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="RundeckApiException"
 type="org.rundeck.api.RundeckApiException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<class name="RundeckApiException.RundeckApiAuthException"
 extends="org.rundeck.api.RundeckApiException"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckApiException.RundeckApiAuthException"
 type="org.rundeck.api.RundeckApiException.RundeckApiAuthException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="RundeckApiException.RundeckApiAuthException"
 type="org.rundeck.api.RundeckApiException.RundeckApiAuthException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<class name="RundeckApiException.RundeckApiHttpContentTypeException"
 extends="org.rundeck.api.RundeckApiException.RundeckApiAuthException"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckApiException.RundeckApiHttpContentTypeException"
 type="org.rundeck.api.RundeckApiException.RundeckApiHttpContentTypeException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="contentType" type="java.lang.String">
</parameter>
<parameter name="requiredContentType" type="java.lang.String">
</parameter>
</constructor>
<constructor name="RundeckApiException.RundeckApiHttpContentTypeException"
 type="org.rundeck.api.RundeckApiException.RundeckApiHttpContentTypeException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="contentType" type="java.lang.String">
</parameter>
<parameter name="requiredContentType" type="java.lang.String">
</parameter>
</constructor>
<constructor name="RundeckApiException.RundeckApiHttpContentTypeException"
 type="org.rundeck.api.RundeckApiException.RundeckApiHttpContentTypeException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
<parameter name="contentType" type="java.lang.String">
</parameter>
<parameter name="requiredContentType" type="java.lang.String">
</parameter>
</constructor>
<method name="getContentType"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRequiredContentType"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RundeckApiException.RundeckApiHttpStatusException"
 extends="org.rundeck.api.RundeckApiException.RundeckApiAuthException"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckApiException.RundeckApiHttpStatusException"
 type="org.rundeck.api.RundeckApiException.RundeckApiHttpStatusException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="statusCode" type="int">
</parameter>
</constructor>
<constructor name="RundeckApiException.RundeckApiHttpStatusException"
 type="org.rundeck.api.RundeckApiException.RundeckApiHttpStatusException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
<parameter name="statusCode" type="int">
</parameter>
</constructor>
<method name="getStatusCode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RundeckApiException.RundeckApiLoginException"
 extends="org.rundeck.api.RundeckApiException.RundeckApiAuthException"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckApiException.RundeckApiLoginException"
 type="org.rundeck.api.RundeckApiException.RundeckApiLoginException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="RundeckApiException.RundeckApiLoginException"
 type="org.rundeck.api.RundeckApiException.RundeckApiLoginException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<class name="RundeckApiException.RundeckApiTokenException"
 extends="org.rundeck.api.RundeckApiException.RundeckApiAuthException"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckApiException.RundeckApiTokenException"
 type="org.rundeck.api.RundeckApiException.RundeckApiTokenException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="RundeckApiException.RundeckApiTokenException"
 type="org.rundeck.api.RundeckApiException.RundeckApiTokenException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<class name="RundeckClient"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="abortExecution"
 return="org.rundeck.api.domain.RundeckAbort"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="java.lang.Long">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="abortExecution"
 return="org.rundeck.api.domain.RundeckAbort"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="java.lang.Long">
</parameter>
<parameter name="asUser" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="builder"
 return="org.rundeck.api.RundeckClientBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="createProject"
 return="org.rundeck.api.domain.RundeckProject"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="projectName" type="java.lang.String">
</parameter>
<parameter name="configuration" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="deleteAllJobExecutions"
 return="org.rundeck.api.domain.DeleteExecutionsResponse"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobId" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="deleteApiToken"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="token" type="java.lang.String">
</parameter>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
</method>
<method name="deleteExecution"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="java.lang.Long">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="deleteExecutions"
 return="org.rundeck.api.domain.DeleteExecutionsResponse"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionIds" type="java.util.Set&lt;java.lang.Long&gt;">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="deleteJob"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobId" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="deleteJobs"
 return="org.rundeck.api.domain.RundeckJobDeleteBulk"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobIds" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="deleteKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
</method>
<method name="deleteProject"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="projectName" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="deleteProjectConfig"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="projectName" type="java.lang.String">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="deleteProjectFile"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="projectName" type="java.lang.String">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
</method>
<method name="exportJob"
 return="java.io.InputStream"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="format" type="java.lang.String">
</parameter>
<parameter name="jobId" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="exportJob"
 return="java.io.InputStream"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="format" type="org.rundeck.api.FileType">
</parameter>
<parameter name="jobId" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="exportJobToFile"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="format" type="java.lang.String">
</parameter>
<parameter name="jobId" type="java.lang.String">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="exportJobToFile"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="format" type="org.rundeck.api.FileType">
</parameter>
<parameter name="jobId" type="java.lang.String">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="exportJobs"
 return="java.io.InputStream"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="format" type="java.lang.String">
</parameter>
<parameter name="project" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="exportJobs"
 return="java.io.InputStream"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="format" type="java.lang.String">
</parameter>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="jobFilter" type="java.lang.String">
</parameter>
<parameter name="groupPath" type="java.lang.String">
</parameter>
<parameter name="jobIds" type="java.lang.String...">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="exportJobs"
 return="java.io.InputStream"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="format" type="org.rundeck.api.FileType">
</parameter>
<parameter name="project" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="exportJobs"
 return="java.io.InputStream"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="format" type="org.rundeck.api.FileType">
</parameter>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="jobFilter" type="java.lang.String">
</parameter>
<parameter name="groupPath" type="java.lang.String">
</parameter>
<parameter name="jobIds" type="java.lang.String...">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="exportJobsToFile"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="format" type="java.lang.String">
</parameter>
<parameter name="project" type="java.lang.String">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="exportJobsToFile"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="format" type="java.lang.String">
</parameter>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="jobFilter" type="java.lang.String">
</parameter>
<parameter name="groupPath" type="java.lang.String">
</parameter>
<parameter name="jobIds" type="java.lang.String...">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="exportJobsToFile"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="format" type="org.rundeck.api.FileType">
</parameter>
<parameter name="project" type="java.lang.String">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="exportJobsToFile"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="format" type="org.rundeck.api.FileType">
</parameter>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="jobFilter" type="java.lang.String">
</parameter>
<parameter name="groupPath" type="java.lang.String">
</parameter>
<parameter name="jobIds" type="java.lang.String...">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="exportProject"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="projectName" type="java.lang.String">
</parameter>
<parameter name="out" type="java.io.File">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="exportProject"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="projectName" type="java.lang.String">
</parameter>
<parameter name="out" type="java.io.OutputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="findJob"
 return="org.rundeck.api.domain.RundeckJob"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="groupPath" type="java.lang.String">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="generateApiToken"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="java.lang.String">
</parameter>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
</method>
<method name="generateToken"
 return="java.io.InputStream"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getApiToken"
 return="org.rundeck.api.domain.RundeckToken"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="token" type="java.lang.String">
</parameter>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
</method>
<method name="getExecution"
 return="org.rundeck.api.domain.RundeckExecution"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="java.lang.Long">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getExecutionOutput"
 return="org.rundeck.api.domain.RundeckOutput"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="java.lang.Long">
</parameter>
<parameter name="offset" type="int">
</parameter>
<parameter name="lastlines" type="int">
</parameter>
<parameter name="lastmod" type="long">
</parameter>
<parameter name="maxlines" type="int">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getExecutionOutput"
 return="org.rundeck.api.domain.RundeckOutput"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="java.lang.Long">
</parameter>
<parameter name="offset" type="int">
</parameter>
<parameter name="lastmod" type="long">
</parameter>
<parameter name="maxlines" type="int">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getExecutionOutputForNode"
 return="org.rundeck.api.domain.RundeckOutput"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="java.lang.Long">
</parameter>
<parameter name="nodeName" type="java.lang.String">
</parameter>
<parameter name="offset" type="int">
</parameter>
<parameter name="lastlines" type="int">
</parameter>
<parameter name="lastmod" type="long">
</parameter>
<parameter name="maxlines" type="int">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getExecutionOutputForNodeAndStep"
 return="org.rundeck.api.domain.RundeckOutput"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="java.lang.Long">
</parameter>
<parameter name="nodeName" type="java.lang.String">
</parameter>
<parameter name="stepCtx" type="java.lang.String">
</parameter>
<parameter name="offset" type="int">
</parameter>
<parameter name="lastlines" type="int">
</parameter>
<parameter name="lastmod" type="long">
</parameter>
<parameter name="maxlines" type="int">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getExecutionOutputForStep"
 return="org.rundeck.api.domain.RundeckOutput"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="java.lang.Long">
</parameter>
<parameter name="stepCtx" type="java.lang.String">
</parameter>
<parameter name="offset" type="int">
</parameter>
<parameter name="lastlines" type="int">
</parameter>
<parameter name="lastmod" type="long">
</parameter>
<parameter name="maxlines" type="int">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getExecutionOutputState"
 return="org.rundeck.api.domain.RundeckOutput"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="java.lang.Long">
</parameter>
<parameter name="stateOnly" type="boolean">
</parameter>
<parameter name="offset" type="int">
</parameter>
<parameter name="lastmod" type="long">
</parameter>
<parameter name="maxlines" type="int">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getExecutionState"
 return="org.rundeck.api.domain.RundeckExecutionState"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="java.lang.Long">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getExecutions"
 return="org.rundeck.api.util.PagedResults&lt;org.rundeck.api.domain.RundeckExecution&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="query" type="org.rundeck.api.query.ExecutionQuery">
</parameter>
<parameter name="max" type="java.lang.Long">
</parameter>
<parameter name="offset" type="java.lang.Long">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getHistory"
 return="org.rundeck.api.domain.RundeckHistory"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getHistory"
 return="org.rundeck.api.domain.RundeckHistory"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="max" type="java.lang.Long">
</parameter>
<parameter name="offset" type="java.lang.Long">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getHistory"
 return="org.rundeck.api.domain.RundeckHistory"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="recent" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getHistory"
 return="org.rundeck.api.domain.RundeckHistory"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="recent" type="java.lang.String">
</parameter>
<parameter name="max" type="java.lang.Long">
</parameter>
<parameter name="offset" type="java.lang.Long">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getHistory"
 return="org.rundeck.api.domain.RundeckHistory"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="jobId" type="java.lang.String">
</parameter>
<parameter name="reportId" type="java.lang.String">
</parameter>
<parameter name="user" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getHistory"
 return="org.rundeck.api.domain.RundeckHistory"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="jobId" type="java.lang.String">
</parameter>
<parameter name="reportId" type="java.lang.String">
</parameter>
<parameter name="user" type="java.lang.String">
</parameter>
<parameter name="max" type="java.lang.Long">
</parameter>
<parameter name="offset" type="java.lang.Long">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getHistory"
 return="org.rundeck.api.domain.RundeckHistory"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="jobId" type="java.lang.String">
</parameter>
<parameter name="reportId" type="java.lang.String">
</parameter>
<parameter name="user" type="java.lang.String">
</parameter>
<parameter name="recent" type="java.lang.String">
</parameter>
<parameter name="begin" type="java.util.Date">
</parameter>
<parameter name="end" type="java.util.Date">
</parameter>
<parameter name="max" type="java.lang.Long">
</parameter>
<parameter name="offset" type="java.lang.Long">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getHistory"
 return="org.rundeck.api.domain.RundeckHistory"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="user" type="java.lang.String">
</parameter>
<parameter name="recent" type="java.lang.String">
</parameter>
<parameter name="includeJobNames" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
<parameter name="excludeJobNames" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
<parameter name="begin" type="java.util.Date">
</parameter>
<parameter name="end" type="java.util.Date">
</parameter>
<parameter name="max" type="java.lang.Long">
</parameter>
<parameter name="offset" type="java.lang.Long">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getHistory"
 return="org.rundeck.api.domain.RundeckHistory"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="begin" type="java.util.Date">
</parameter>
<parameter name="end" type="java.util.Date">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getHistory"
 return="org.rundeck.api.domain.RundeckHistory"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="begin" type="java.util.Date">
</parameter>
<parameter name="end" type="java.util.Date">
</parameter>
<parameter name="max" type="java.lang.Long">
</parameter>
<parameter name="offset" type="java.lang.Long">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getJob"
 return="org.rundeck.api.domain.RundeckJob"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobId" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getJobExecutions"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckExecution&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobId" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getJobExecutions"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckExecution&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobId" type="java.lang.String">
</parameter>
<parameter name="status" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getJobExecutions"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckExecution&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobId" type="java.lang.String">
</parameter>
<parameter name="status" type="java.lang.String">
</parameter>
<parameter name="max" type="java.lang.Long">
</parameter>
<parameter name="offset" type="java.lang.Long">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getJobExecutions"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckExecution&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobId" type="java.lang.String">
</parameter>
<parameter name="status" type="org.rundeck.api.domain.RundeckExecution.ExecutionStatus">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getJobExecutions"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckExecution&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobId" type="java.lang.String">
</parameter>
<parameter name="status" type="org.rundeck.api.domain.RundeckExecution.ExecutionStatus">
</parameter>
<parameter name="max" type="java.lang.Long">
</parameter>
<parameter name="offset" type="java.lang.Long">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getJobs"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckJob&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getJobs"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckJob&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getJobs"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckJob&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="jobFilter" type="java.lang.String">
</parameter>
<parameter name="groupPath" type="java.lang.String">
</parameter>
<parameter name="jobIds" type="java.lang.String...">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getKey"
 return="org.rundeck.api.domain.KeyResource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
</method>
<method name="getLogin"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNode"
 return="org.rundeck.api.domain.RundeckNode"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<parameter name="project" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getNodes"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckNode&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getNodes"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckNode&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getNodes"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckNode&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<parameter name="nodeFilters" type="java.util.Properties">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getOutput"
 return="java.io.InputStream"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getProfilePage"
 return="java.io.InputStream"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getProject"
 return="org.rundeck.api.domain.RundeckProject"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="projectName" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getProjectConfig"
 return="org.rundeck.api.domain.ProjectConfig"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="projectName" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getProjectConfig"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="projectName" type="java.lang.String">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getProjects"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckProject&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getPublicKeyContent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="out" type="java.io.File">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
</method>
<method name="getPublicKeyContent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="out" type="java.io.OutputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
</method>
<method name="getRunningExecutions"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckExecution&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getRunningExecutions"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckExecution&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getSessionID"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSystemInfo"
 return="org.rundeck.api.domain.RundeckSystemInfo"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="getToken"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUrl"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="importArchive"
 return="org.rundeck.api.domain.ArchiveImport"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="projectName" type="java.lang.String">
</parameter>
<parameter name="archiveFile" type="java.io.File">
</parameter>
<parameter name="includeExecutions" type="boolean">
</parameter>
<parameter name="preserveJobUuids" type="boolean">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="importJobs"
 return="org.rundeck.api.domain.RundeckJobsImportResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="rundeckJobsImport" type="org.rundeck.api.RundeckJobsImport">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="importJobs"
 return="org.rundeck.api.domain.RundeckJobsImportResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rundeckJobsImport" type="org.rundeck.api.RundeckJobsImport">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="listApiTokens"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckToken&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
</method>
<method name="listApiTokens"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckToken&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="java.lang.String">
</parameter>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
</method>
<method name="listKeyDirectory"
 return="java.util.List&lt;org.rundeck.api.domain.KeyResource&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
</method>
<method name="listKeyDirectoryRoot"
 return="java.util.List&lt;org.rundeck.api.domain.KeyResource&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
</method>
<method name="ping"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
</method>
<method name="readProjectFile"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="projectName" type="java.lang.String">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
</method>
<method name="runAdhocCommand"
 return="org.rundeck.api.domain.RundeckExecution"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="command" type="org.rundeck.api.RunAdhocCommand">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="runAdhocCommand"
 return="org.rundeck.api.domain.RundeckExecution"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="command" type="org.rundeck.api.RunAdhocCommand">
</parameter>
<parameter name="poolingInterval" type="long">
</parameter>
<parameter name="poolingUnit" type="java.util.concurrent.TimeUnit">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="runAdhocScript"
 return="org.rundeck.api.domain.RundeckExecution"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="script" type="org.rundeck.api.RunAdhocScript">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="runAdhocScript"
 return="org.rundeck.api.domain.RundeckExecution"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="script" type="org.rundeck.api.RunAdhocScript">
</parameter>
<parameter name="scriptFilename" type="java.lang.String">
</parameter>
<parameter name="poolingInterval" type="long">
</parameter>
<parameter name="poolingUnit" type="java.util.concurrent.TimeUnit">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="runAdhocScript"
 return="org.rundeck.api.domain.RundeckExecution"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="script" type="org.rundeck.api.RunAdhocScript">
</parameter>
<parameter name="poolingInterval" type="long">
</parameter>
<parameter name="poolingUnit" type="java.util.concurrent.TimeUnit">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="runJob"
 return="org.rundeck.api.domain.RundeckExecution"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="runJob" type="org.rundeck.api.RunJob">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="runJob"
 return="org.rundeck.api.domain.RundeckExecution"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobRun" type="org.rundeck.api.RunJob">
</parameter>
<parameter name="poolingInterval" type="long">
</parameter>
<parameter name="poolingUnit" type="java.util.concurrent.TimeUnit">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="setProjectConfig"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="projectName" type="java.lang.String">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="setProjectConfig"
 return="org.rundeck.api.domain.ProjectConfig"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="projectName" type="java.lang.String">
</parameter>
<parameter name="configuration" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="storeKey"
 return="org.rundeck.api.domain.KeyResource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="keyfile" type="java.io.File">
</parameter>
<parameter name="privateKey" type="boolean">
</parameter>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
</method>
<method name="storeProjectFile"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="projectName" type="java.lang.String">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="content" type="java.lang.String">
</parameter>
</method>
<method name="testAuth"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="triggerAdhocCommand"
 return="org.rundeck.api.domain.RundeckExecution"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="command" type="org.rundeck.api.RunAdhocCommand">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="triggerAdhocScript"
 return="org.rundeck.api.domain.RundeckExecution"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="script" type="org.rundeck.api.RunAdhocScript">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="triggerAdhocScript"
 return="org.rundeck.api.domain.RundeckExecution"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="script" type="org.rundeck.api.RunAdhocScript">
</parameter>
<parameter name="scriptFilename" type="java.lang.String">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<method name="triggerJob"
 return="org.rundeck.api.domain.RundeckExecution"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobRun" type="org.rundeck.api.RunJob">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
<exception name="RundeckApiException.RundeckApiLoginException" type="org.rundeck.api.RundeckApiException.RundeckApiLoginException">
</exception>
<exception name="RundeckApiException.RundeckApiTokenException" type="org.rundeck.api.RundeckApiException.RundeckApiTokenException">
</exception>
</method>
<field name="API_ENDPOINT"
 type="java.lang.String"
 transient="true"
 volatile="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="API_VERSION"
 type="int"
 transient="true"
 volatile="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="DEFAULT_POOLING_INTERVAL"
 type="long"
 transient="true"
 volatile="false"
 value="5L"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="DEFAULT_POOLING_UNIT"
 type="java.util.concurrent.TimeUnit"
 transient="false"
 volatile="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="JOBS_IMPORT"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;/jobs/import&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="STORAGE_KEYS_PATH"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;keys/&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="STORAGE_ROOT_PATH"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;/storage/&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="RundeckClient.Version"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getVersionNumber"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="org.rundeck.api.RundeckClient.Version"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="org.rundeck.api.RundeckClient.Version[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RundeckClientBuilder"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="build"
 return="org.rundeck.api.RundeckClient"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="login"
 return="org.rundeck.api.RundeckClientBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="login" type="java.lang.String">
</parameter>
</method>
<method name="login"
 return="org.rundeck.api.RundeckClientBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="login" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
</method>
<method name="password"
 return="org.rundeck.api.RundeckClientBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
</method>
<method name="sessionId"
 return="org.rundeck.api.RundeckClientBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="java.lang.String">
</parameter>
</method>
<method name="sslCertificateTrustAllowSelfSigned"
 return="org.rundeck.api.RundeckClientBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sslCertificateTrustAllowSelfSigned" type="boolean">
</parameter>
</method>
<method name="sslHostnameVerifyAllowAll"
 return="org.rundeck.api.RundeckClientBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sslHostnameVerifyAllowAll" type="boolean">
</parameter>
</method>
<method name="systemProxyEnabled"
 return="org.rundeck.api.RundeckClientBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="systemProxyEnabled" type="boolean">
</parameter>
</method>
<method name="token"
 return="org.rundeck.api.RundeckClientBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="token" type="java.lang.String">
</parameter>
</method>
<method name="url"
 return="org.rundeck.api.RundeckClientBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="url" type="java.lang.String">
</parameter>
</method>
<method name="version"
 return="org.rundeck.api.RundeckClientBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="version" type="int">
</parameter>
</method>
<method name="version"
 return="org.rundeck.api.RundeckClientBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="version" type="org.rundeck.api.RundeckClient.Version">
</parameter>
</method>
</class>
<interface name="RundeckJobsImport"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getFileType"
 return="org.rundeck.api.FileType"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getImportMethod"
 return="org.rundeck.api.domain.RundeckJobsImportMethod"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getProject"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStream"
 return="java.io.InputStream"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUuidImportBehavior"
 return="org.rundeck.api.domain.RundeckJobsUUIDImportBehavior"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="RundeckJobsImportBuilder"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckJobsImportBuilder"
 type="org.rundeck.api.RundeckJobsImportBuilder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="RundeckJobsImportBuilder"
 type="org.rundeck.api.RundeckJobsImportBuilder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="original" type="org.rundeck.api.RundeckJobsImport">
</parameter>
</constructor>
<method name="build"
 return="org.rundeck.api.RundeckJobsImport"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="builder"
 return="org.rundeck.api.RundeckJobsImportBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="builder"
 return="org.rundeck.api.RundeckJobsImportBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="original" type="org.rundeck.api.RundeckJobsImport">
</parameter>
</method>
<method name="setFileType"
 return="org.rundeck.api.RundeckJobsImportBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filetype" type="org.rundeck.api.FileType">
</parameter>
</method>
<method name="setJobsImportMethod"
 return="org.rundeck.api.RundeckJobsImportBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="behavior" type="org.rundeck.api.domain.RundeckJobsImportMethod">
</parameter>
</method>
<method name="setProject"
 return="org.rundeck.api.RundeckJobsImportBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
</method>
<method name="setStream"
 return="org.rundeck.api.RundeckJobsImportBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
</method>
<method name="setUUIDImportBehavior"
 return="org.rundeck.api.RundeckJobsImportBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="behavior" type="org.rundeck.api.domain.RundeckJobsUUIDImportBehavior">
</parameter>
</method>
</class>
</package>
<package name="org.rundeck.api.domain"
>
<class name="ArchiveImport"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ArchiveImport"
 type="org.rundeck.api.domain.ArchiveImport"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="successful" type="boolean">
</parameter>
<parameter name="errorMessages" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</constructor>
<method name="getErrorMessages"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isSuccessful"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="BaseKeyResource"
 extends="org.rundeck.api.domain.BaseStorageResource"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.domain.KeyResource">
</implements>
<constructor name="BaseKeyResource"
 type="org.rundeck.api.domain.BaseKeyResource"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="from"
 return="org.rundeck.api.domain.BaseKeyResource"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.rundeck.api.domain.StorageResource">
</parameter>
</method>
<method name="isPrivateKey"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setPrivateKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="privateKey" type="boolean">
</parameter>
</method>
</class>
<class name="BaseState"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="BaseState"
 type="org.rundeck.api.domain.BaseState"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getEndTime"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExecutionState"
 return="org.rundeck.api.domain.RundeckWFExecState"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStartTime"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUpdateTime"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setEndTime"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="endTime" type="java.util.Date">
</parameter>
</method>
<method name="setExecutionState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionState" type="org.rundeck.api.domain.RundeckWFExecState">
</parameter>
</method>
<method name="setStartTime"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="startTime" type="java.util.Date">
</parameter>
</method>
<method name="setUpdateTime"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="updateTime" type="java.util.Date">
</parameter>
</method>
</class>
<class name="BaseStorageResource"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.domain.StorageResource">
</implements>
<constructor name="BaseStorageResource"
 type="org.rundeck.api.domain.BaseStorageResource"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDirectoryContents"
 return="java.util.List&lt;? extends org.rundeck.api.domain.StorageResource&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMetadata"
 return="java.util.Map&lt;java.lang.String, java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUrl"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isDirectory"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDirectory"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="directory" type="boolean">
</parameter>
</method>
<method name="setDirectoryContents"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="directoryContents" type="java.util.List&lt;? extends org.rundeck.api.domain.StorageResource&gt;">
</parameter>
</method>
<method name="setMetadata"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="metadata" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setPath"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
</method>
<method name="setUrl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="url" type="java.lang.String">
</parameter>
</method>
</class>
<class name="ConfigProperty"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ConfigProperty"
 type="org.rundeck.api.domain.ConfigProperty"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="ConfigProperty"
 type="org.rundeck.api.domain.ConfigProperty"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
</constructor>
<method name="getKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getValue"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
<method name="setValue"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
</method>
</class>
<class name="DeleteExecutionsResponse"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DeleteExecutionsResponse"
 type="org.rundeck.api.domain.DeleteExecutionsResponse"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getFailedCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFailures"
 return="java.util.List&lt;org.rundeck.api.domain.DeleteExecutionsResponse.DeleteFailure&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRequestCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSuccessCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAllsuccessful"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAllsuccessful"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="allsuccessful" type="boolean">
</parameter>
</method>
<method name="setFailedCount"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="failedCount" type="int">
</parameter>
</method>
<method name="setFailures"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="failures" type="java.util.List&lt;org.rundeck.api.domain.DeleteExecutionsResponse.DeleteFailure&gt;">
</parameter>
</method>
<method name="setRequestCount"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="requestCount" type="int">
</parameter>
</method>
<method name="setSuccessCount"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="successCount" type="int">
</parameter>
</method>
</class>
<class name="DeleteExecutionsResponse.DeleteFailure"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DeleteExecutionsResponse.DeleteFailure"
 type="org.rundeck.api.domain.DeleteExecutionsResponse.DeleteFailure"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getExecutionId"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMessage"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setExecutionId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="java.lang.Long">
</parameter>
</method>
<method name="setMessage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</method>
</class>
<interface name="KeyResource"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.domain.StorageResource">
</implements>
<method name="getDirectoryContents"
 return="java.util.List&lt;org.rundeck.api.domain.KeyResource&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPrivateKey"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="ProjectConfig"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ProjectConfig"
 type="org.rundeck.api.domain.ProjectConfig"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="ProjectConfig"
 type="org.rundeck.api.domain.ProjectConfig"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="properties" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;">
</parameter>
</constructor>
<method name="addProperties"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="values" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;">
</parameter>
</method>
<method name="getProperties"
 return="java.util.Map&lt;java.lang.String, java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setProperties"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="properties" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;">
</parameter>
</method>
<method name="setProperty"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
</method>
</class>
<class name="RundeckAbort"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckAbort"
 type="org.rundeck.api.domain.RundeckAbort"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getExecution"
 return="org.rundeck.api.domain.RundeckExecution"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStatus"
 return="org.rundeck.api.domain.RundeckAbort.AbortStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setExecution"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="execution" type="org.rundeck.api.domain.RundeckExecution">
</parameter>
</method>
<method name="setStatus"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="status" type="org.rundeck.api.domain.RundeckAbort.AbortStatus">
</parameter>
</method>
</class>
<class name="RundeckAbort.AbortStatus"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="org.rundeck.api.domain.RundeckAbort.AbortStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="org.rundeck.api.domain.RundeckAbort.AbortStatus[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RundeckEvent"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckEvent"
 type="org.rundeck.api.domain.RundeckEvent"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getAbortedBy"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDuration"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDurationInMillis"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDurationInSeconds"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEndedAt"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExecutionId"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getJobId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNodeSummary"
 return="org.rundeck.api.domain.RundeckEvent.NodeSummary"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getProject"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getShortDuration"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStartedAt"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStatus"
 return="org.rundeck.api.domain.RundeckEvent.EventStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSummary"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUser"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAdhoc"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAbortedBy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="abortedBy" type="java.lang.String">
</parameter>
</method>
<method name="setEndedAt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="endedAt" type="java.util.Date">
</parameter>
</method>
<method name="setExecutionId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="java.lang.Long">
</parameter>
</method>
<method name="setJobId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobId" type="java.lang.String">
</parameter>
</method>
<method name="setNodeSummary"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="nodeSummary" type="org.rundeck.api.domain.RundeckEvent.NodeSummary">
</parameter>
</method>
<method name="setProject"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
</method>
<method name="setStartedAt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="startedAt" type="java.util.Date">
</parameter>
</method>
<method name="setStatus"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="status" type="org.rundeck.api.domain.RundeckEvent.EventStatus">
</parameter>
</method>
<method name="setSummary"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="summary" type="java.lang.String">
</parameter>
</method>
<method name="setTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
</method>
<method name="setUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="java.lang.String">
</parameter>
</method>
</class>
<class name="RundeckEvent.EventStatus"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="org.rundeck.api.domain.RundeckEvent.EventStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="org.rundeck.api.domain.RundeckEvent.EventStatus[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RundeckEvent.NodeSummary"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckEvent.NodeSummary"
 type="org.rundeck.api.domain.RundeckEvent.NodeSummary"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getFailed"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSucceeded"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTotal"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setFailed"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="failed" type="int">
</parameter>
</method>
<method name="setSucceeded"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="succeeded" type="int">
</parameter>
</method>
<method name="setTotal"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="total" type="int">
</parameter>
</method>
</class>
<class name="RundeckExecution"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckExecution"
 type="org.rundeck.api.domain.RundeckExecution"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getAbortedBy"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getArgstring"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDuration"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDurationInMillis"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDurationInSeconds"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEndedAt"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFailedNodes"
 return="java.util.Set&lt;org.rundeck.api.domain.RundeckNodeIdentity&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getJob"
 return="org.rundeck.api.domain.RundeckJob"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getProject"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getShortDuration"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStartedAt"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStartedBy"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStatus"
 return="org.rundeck.api.domain.RundeckExecution.ExecutionStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSuccessfulNodes"
 return="java.util.Set&lt;org.rundeck.api.domain.RundeckNodeIdentity&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUrl"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAbortedBy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="abortedBy" type="java.lang.String">
</parameter>
</method>
<method name="setArgstring"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="argstring" type="java.lang.String">
</parameter>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setEndedAt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="endedAt" type="java.util.Date">
</parameter>
</method>
<method name="setFailedNodes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="failedNodes" type="java.util.Set&lt;org.rundeck.api.domain.RundeckNodeIdentity&gt;">
</parameter>
</method>
<method name="setId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="java.lang.Long">
</parameter>
</method>
<method name="setJob"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="job" type="org.rundeck.api.domain.RundeckJob">
</parameter>
</method>
<method name="setProject"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
</method>
<method name="setStartedAt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="startedAt" type="java.util.Date">
</parameter>
</method>
<method name="setStartedBy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="startedBy" type="java.lang.String">
</parameter>
</method>
<method name="setStatus"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="status" type="org.rundeck.api.domain.RundeckExecution.ExecutionStatus">
</parameter>
</method>
<method name="setSuccessfulNodes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="successfulNodes" type="java.util.Set&lt;org.rundeck.api.domain.RundeckNodeIdentity&gt;">
</parameter>
</method>
<method name="setUrl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="url" type="java.lang.String">
</parameter>
</method>
</class>
<class name="RundeckExecution.ExecutionStatus"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="org.rundeck.api.domain.RundeckExecution.ExecutionStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="org.rundeck.api.domain.RundeckExecution.ExecutionStatus[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RundeckExecutionState"
 extends="org.rundeck.api.domain.WorkflowState"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckExecutionState"
 type="org.rundeck.api.domain.RundeckExecutionState"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getAllNodes"
 return="java.util.Set&lt;org.rundeck.api.domain.RundeckNodeIdentity&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExecutionId"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNodeStates"
 return="java.util.Map&lt;java.lang.String, java.util.List&lt;org.rundeck.api.domain.WorkflowStepContextState&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAllNodes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="allNodes" type="java.util.Set&lt;org.rundeck.api.domain.RundeckNodeIdentity&gt;">
</parameter>
</method>
<method name="setExecutionId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="long">
</parameter>
</method>
<method name="setNodeStates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="nodeStates" type="java.util.Map&lt;java.lang.String, java.util.List&lt;org.rundeck.api.domain.WorkflowStepContextState&gt;&gt;">
</parameter>
</method>
</class>
<class name="RundeckHistory"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckHistory"
 type="org.rundeck.api.domain.RundeckHistory"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addEvent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="event" type="org.rundeck.api.domain.RundeckEvent">
</parameter>
</method>
<method name="getCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEvents"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckEvent&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMax"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOffset"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTotal"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setCount"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="count" type="int">
</parameter>
</method>
<method name="setEvents"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="events" type="java.util.List&lt;org.rundeck.api.domain.RundeckEvent&gt;">
</parameter>
</method>
<method name="setMax"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="max" type="int">
</parameter>
</method>
<method name="setOffset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="int">
</parameter>
</method>
<method name="setTotal"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="total" type="int">
</parameter>
</method>
</class>
<class name="RundeckJob"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckJob"
 type="org.rundeck.api.domain.RundeckJob"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getAverageDuration"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFullName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getGroup"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getProject"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAverageDuration"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="averageDuration" type="long">
</parameter>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setGroup"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="group" type="java.lang.String">
</parameter>
</method>
<method name="setId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setProject"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
</method>
</class>
<class name="RundeckJobDelete"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckJobDelete"
 type="org.rundeck.api.domain.RundeckJobDelete"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getError"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getErrorCode"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMessage"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isSuccessful"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setError"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="error" type="java.lang.String">
</parameter>
</method>
<method name="setErrorCode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="errorCode" type="java.lang.String">
</parameter>
</method>
<method name="setId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="java.lang.String">
</parameter>
</method>
<method name="setMessage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</method>
<method name="setSuccessful"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="successful" type="boolean">
</parameter>
</method>
</class>
<class name="RundeckJobDeleteBulk"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.Iterable">
</implements>
<constructor name="RundeckJobDeleteBulk"
 type="org.rundeck.api.domain.RundeckJobDeleteBulk"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="results" type="java.util.List&lt;org.rundeck.api.domain.RundeckJobDelete&gt;">
</parameter>
<parameter name="requestCount" type="int">
</parameter>
<parameter name="allsuccessful" type="boolean">
</parameter>
</constructor>
<method name="getRequestCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResults"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckJobDelete&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAllsuccessful"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="iterator"
 return="java.util.Iterator&lt;org.rundeck.api.domain.RundeckJobDelete&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RundeckJobsImportMethod"
 extends="java.lang.Enum"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="org.rundeck.api.domain.RundeckJobsImportMethod"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="org.rundeck.api.domain.RundeckJobsImportMethod[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RundeckJobsImportResult"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckJobsImportResult"
 type="org.rundeck.api.domain.RundeckJobsImportResult"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addFailedJob"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="job" type="org.rundeck.api.domain.RundeckJob">
</parameter>
<parameter name="errorMessage" type="java.lang.String">
</parameter>
</method>
<method name="addSkippedJob"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="job" type="org.rundeck.api.domain.RundeckJob">
</parameter>
</method>
<method name="addSucceededJob"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="job" type="org.rundeck.api.domain.RundeckJob">
</parameter>
</method>
<method name="getFailedJobs"
 return="java.util.Map&lt;org.rundeck.api.domain.RundeckJob, java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSkippedJobs"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckJob&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSucceededJobs"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckJob&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RundeckJobsUUIDImportBehavior"
 extends="java.lang.Enum"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="org.rundeck.api.domain.RundeckJobsUUIDImportBehavior"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="org.rundeck.api.domain.RundeckJobsUUIDImportBehavior[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RundeckNode"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.domain.RundeckNodeIdentity">
</implements>
<constructor name="RundeckNode"
 type="org.rundeck.api.domain.RundeckNode"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEditUrl"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getHostname"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOsArch"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOsFamily"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOsName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOsVersion"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRemoteUrl"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTags"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getType"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsername"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setEditUrl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="editUrl" type="java.lang.String">
</parameter>
</method>
<method name="setHostname"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hostname" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setOsArch"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="osArch" type="java.lang.String">
</parameter>
</method>
<method name="setOsFamily"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="osFamily" type="java.lang.String">
</parameter>
</method>
<method name="setOsName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="osName" type="java.lang.String">
</parameter>
</method>
<method name="setOsVersion"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="osVersion" type="java.lang.String">
</parameter>
</method>
<method name="setRemoteUrl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="remoteUrl" type="java.lang.String">
</parameter>
</method>
<method name="setTags"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tags" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.String">
</parameter>
</method>
<method name="setUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</method>
</class>
<interface name="RundeckNodeIdentity"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getName"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="RundeckOutput"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckOutput"
 type="org.rundeck.api.domain.RundeckOutput"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addLogEntry"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="entry" type="org.rundeck.api.domain.RundeckOutputEntry">
</parameter>
</method>
<method name="getExecDuration"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExecutionId"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFilterNode"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFilterStep"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLastModified"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLogEntries"
 return="java.util.List&lt;org.rundeck.api.domain.RundeckOutputEntry&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOffset"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPercentLoaded"
 return="java.lang.Float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStatus"
 return="org.rundeck.api.domain.RundeckExecution.ExecutionStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTotalSize"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isCompleted"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isEmpty"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isExecCompleted"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isHasFailedNodes"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isUnmodified"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setCompleted"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="completed" type="java.lang.Boolean">
</parameter>
</method>
<method name="setEmpty"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="empty" type="java.lang.Boolean">
</parameter>
</method>
<method name="setExecCompleted"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="execCompleted" type="java.lang.Boolean">
</parameter>
</method>
<method name="setExecDuration"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="execDuration" type="java.lang.Long">
</parameter>
</method>
<method name="setExecutionId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionId" type="java.lang.Long">
</parameter>
</method>
<method name="setFilterNode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filterNode" type="java.lang.String">
</parameter>
</method>
<method name="setFilterStep"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filterStep" type="java.lang.String">
</parameter>
</method>
<method name="setHasFailedNodes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hasFailedNodes" type="java.lang.Boolean">
</parameter>
</method>
<method name="setLastModified"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lastModified" type="java.lang.Long">
</parameter>
</method>
<method name="setLogEntries"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="logEntries" type="java.util.List&lt;org.rundeck.api.domain.RundeckOutputEntry&gt;">
</parameter>
</method>
<method name="setOffset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="int">
</parameter>
</method>
<method name="setPercentLoaded"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="percentLoaded" type="java.lang.Float">
</parameter>
</method>
<method name="setStatus"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="status" type="org.rundeck.api.domain.RundeckExecution.ExecutionStatus">
</parameter>
</method>
<method name="setTotalSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="totalSize" type="int">
</parameter>
</method>
<method name="setUnmodified"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="unmodified" type="java.lang.Boolean">
</parameter>
</method>
</class>
<class name="RundeckOutputEntry"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckOutputEntry"
 type="org.rundeck.api.domain.RundeckOutputEntry"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getAbsoluteTime"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCommand"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLevel"
 return="org.rundeck.api.domain.RundeckOutputEntry.RundeckLogLevel"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMessage"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMetadata"
 return="java.util.Map&lt;java.lang.String, java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNode"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTime"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getType"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUser"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAbsoluteTime"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="absoluteTime" type="java.util.Date">
</parameter>
</method>
<method name="setCommand"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="command" type="java.lang.String">
</parameter>
</method>
<method name="setLevel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="level" type="org.rundeck.api.domain.RundeckOutputEntry.RundeckLogLevel">
</parameter>
</method>
<method name="setMessage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</method>
<method name="setMetadata"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="metadata" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;">
</parameter>
</method>
<method name="setNode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="java.lang.String">
</parameter>
</method>
<method name="setTime"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="time" type="java.lang.String">
</parameter>
</method>
<method name="setType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.String">
</parameter>
</method>
<method name="setUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="java.lang.String">
</parameter>
</method>
</class>
<class name="RundeckOutputEntry.RundeckLogLevel"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="org.rundeck.api.domain.RundeckOutputEntry.RundeckLogLevel"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="org.rundeck.api.domain.RundeckOutputEntry.RundeckLogLevel[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RundeckProject"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckProject"
 type="org.rundeck.api.domain.RundeckProject"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getProjectConfig"
 return="org.rundeck.api.domain.ProjectConfig"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResourceModelProviderUrl"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setProjectConfig"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="projectConfig" type="org.rundeck.api.domain.ProjectConfig">
</parameter>
</method>
<method name="setResourceModelProviderUrl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resourceModelProviderUrl" type="java.lang.String">
</parameter>
</method>
</class>
<class name="RundeckSystemInfo"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckSystemInfo"
 type="org.rundeck.api.domain.RundeckSystemInfo"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getActiveThreads"
 return="java.lang.Integer"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBaseDir"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBuild"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCpuLoadAverage"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDate"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFreeMemoryInBytes"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getJvmName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getJvmVendor"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getJvmVersion"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMaxMemoryInBytes"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNode"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOsArch"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOsName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOsVersion"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRunningJobs"
 return="java.lang.Integer"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStartDate"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTotalMemoryInBytes"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUptime"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUptimeInMillis"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getVersion"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setActiveThreads"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="activeThreads" type="java.lang.Integer">
</parameter>
</method>
<method name="setBaseDir"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="baseDir" type="java.lang.String">
</parameter>
</method>
<method name="setBuild"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="build" type="java.lang.String">
</parameter>
</method>
<method name="setCpuLoadAverage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cpuLoadAverage" type="java.lang.String">
</parameter>
</method>
<method name="setDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="date" type="java.util.Date">
</parameter>
</method>
<method name="setFreeMemoryInBytes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="freeMemoryInBytes" type="java.lang.Long">
</parameter>
</method>
<method name="setJvmName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jvmName" type="java.lang.String">
</parameter>
</method>
<method name="setJvmVendor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jvmVendor" type="java.lang.String">
</parameter>
</method>
<method name="setJvmVersion"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jvmVersion" type="java.lang.String">
</parameter>
</method>
<method name="setMaxMemoryInBytes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="maxMemoryInBytes" type="java.lang.Long">
</parameter>
</method>
<method name="setNode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="java.lang.String">
</parameter>
</method>
<method name="setOsArch"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="osArch" type="java.lang.String">
</parameter>
</method>
<method name="setOsName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="osName" type="java.lang.String">
</parameter>
</method>
<method name="setOsVersion"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="osVersion" type="java.lang.String">
</parameter>
</method>
<method name="setRunningJobs"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="runningJobs" type="java.lang.Integer">
</parameter>
</method>
<method name="setStartDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="startDate" type="java.util.Date">
</parameter>
</method>
<method name="setTotalMemoryInBytes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="totalMemoryInBytes" type="java.lang.Long">
</parameter>
</method>
<method name="setUptimeInMillis"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="uptimeInMillis" type="java.lang.Long">
</parameter>
</method>
<method name="setVersion"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="version" type="java.lang.String">
</parameter>
</method>
</class>
<class name="RundeckToken"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RundeckToken"
 type="org.rundeck.api.domain.RundeckToken"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="RundeckToken"
 type="org.rundeck.api.domain.RundeckToken"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="java.lang.String">
</parameter>
<parameter name="token" type="java.lang.String">
</parameter>
</constructor>
<method name="getToken"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUser"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setToken"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="token" type="java.lang.String">
</parameter>
</method>
<method name="setUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="java.lang.String">
</parameter>
</method>
</class>
<class name="RundeckWFExecState"
 extends="java.lang.Enum"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="org.rundeck.api.domain.RundeckWFExecState"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="org.rundeck.api.domain.RundeckWFExecState[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="StorageResource"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getDirectoryContents"
 return="java.util.List&lt;? extends org.rundeck.api.domain.StorageResource&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMetadata"
 return="java.util.Map&lt;java.lang.String, java.lang.String&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPath"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUrl"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isDirectory"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="WorkflowState"
 extends="org.rundeck.api.domain.BaseState"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="WorkflowState"
 type="org.rundeck.api.domain.WorkflowState"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getStepCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSteps"
 return="java.util.List&lt;org.rundeck.api.domain.WorkflowStepState&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTargetNodes"
 return="java.util.Set&lt;org.rundeck.api.domain.RundeckNodeIdentity&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setStepCount"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stepCount" type="int">
</parameter>
</method>
<method name="setSteps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="steps" type="java.util.List&lt;org.rundeck.api.domain.WorkflowStepState&gt;">
</parameter>
</method>
<method name="setTargetNodes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="targetNodes" type="java.util.Set&lt;org.rundeck.api.domain.RundeckNodeIdentity&gt;">
</parameter>
</method>
</class>
<class name="WorkflowStepContextState"
 extends="org.rundeck.api.domain.BaseState"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="WorkflowStepContextState"
 type="org.rundeck.api.domain.WorkflowStepContextState"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getStepContextId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStepNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setStepContextId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stepContextId" type="java.lang.String">
</parameter>
</method>
<method name="setStepNum"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stepNum" type="int">
</parameter>
</method>
</class>
<class name="WorkflowStepState"
 extends="org.rundeck.api.domain.WorkflowStepContextState"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="WorkflowStepState"
 type="org.rundeck.api.domain.WorkflowStepState"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getNodeStates"
 return="java.util.Map&lt;java.lang.String, org.rundeck.api.domain.WorkflowStepContextState&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSubWorkflow"
 return="org.rundeck.api.domain.WorkflowState"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isNodeStep"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setNodeStates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="nodeStates" type="java.util.Map&lt;java.lang.String, org.rundeck.api.domain.WorkflowStepContextState&gt;">
</parameter>
</method>
<method name="setNodeStep"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="nodeStep" type="boolean">
</parameter>
</method>
<method name="setSubWorkflow"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="subWorkflow" type="org.rundeck.api.domain.WorkflowState">
</parameter>
</method>
</class>
</package>
<package name="org.rundeck.api.generator"
>
<class name="BaseDocGenerator"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.generator.XmlDocumentGenerator">
</implements>
<constructor name="BaseDocGenerator"
 type="org.rundeck.api.generator.BaseDocGenerator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="generateXmlDocument"
 return="org.dom4j.Document"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="DeleteExecutionsGenerator"
 extends="org.rundeck.api.generator.BaseDocGenerator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DeleteExecutionsGenerator"
 type="org.rundeck.api.generator.DeleteExecutionsGenerator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionIds" type="java.util.Set&lt;java.lang.Long&gt;">
</parameter>
</constructor>
<method name="generateXmlElement"
 return="org.dom4j.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExecutionIds"
 return="java.util.Set&lt;java.lang.Long&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setExecutionIds"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="executionIds" type="java.util.Set&lt;java.lang.Long&gt;">
</parameter>
</method>
</class>
<class name="ProjectConfigGenerator"
 extends="org.rundeck.api.generator.BaseDocGenerator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ProjectConfigGenerator"
 type="org.rundeck.api.generator.ProjectConfigGenerator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="org.rundeck.api.domain.ProjectConfig">
</parameter>
</constructor>
<method name="generateXmlElement"
 return="org.dom4j.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="ProjectConfigPropertyGenerator"
 extends="org.rundeck.api.generator.BaseDocGenerator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ProjectConfigPropertyGenerator"
 type="org.rundeck.api.generator.ProjectConfigPropertyGenerator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="property" type="org.rundeck.api.domain.ConfigProperty">
</parameter>
</constructor>
<method name="generateXmlElement"
 return="org.dom4j.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="ProjectGenerator"
 extends="org.rundeck.api.generator.BaseDocGenerator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ProjectGenerator"
 type="org.rundeck.api.generator.ProjectGenerator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="org.rundeck.api.domain.RundeckProject">
</parameter>
</constructor>
<method name="generateXmlElement"
 return="org.dom4j.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="XmlDocumentGenerator"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="generateXmlDocument"
 return="org.dom4j.Document"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="generateXmlElement"
 return="org.dom4j.Element"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
</package>
<package name="org.rundeck.api.parser"
>
<class name="APIV11Helper"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="APIV11Helper"
 type="org.rundeck.api.parser.APIV11Helper"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="unwrapIfNeeded"
 return="org.rundeck.api.parser.XmlNodeParser&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="parser" type="org.rundeck.api.parser.XmlNodeParser&lt;T&gt;">
</parameter>
<parameter name="xpath" type="java.lang.String">
</parameter>
</method>
<method name="unwrapResultElement"
 return="org.dom4j.Node"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
<parameter name="xpath" type="java.lang.String">
</parameter>
</method>
</class>
<class name="AbortParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="AbortParser"
 type="org.rundeck.api.parser.AbortParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="AbortParser"
 type="org.rundeck.api.parser.AbortParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.RundeckAbort"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="ArchiveImportParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="ArchiveImportParser"
 type="org.rundeck.api.parser.ArchiveImportParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="ArchiveImportParser"
 type="org.rundeck.api.parser.ArchiveImportParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.ArchiveImport"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="BaseStateParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="BaseStateParser"
 type="org.rundeck.api.parser.BaseStateParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="BaseStateParser"
 type="org.rundeck.api.parser.BaseStateParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseBaseState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="targetNode" type="org.dom4j.Node">
</parameter>
<parameter name="state" type="org.rundeck.api.domain.BaseState">
</parameter>
</method>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.BaseState"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="BaseXpathParser"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="BaseXpathParser"
 type="org.rundeck.api.parser.BaseXpathParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="BaseXpathParser"
 type="org.rundeck.api.parser.BaseXpathParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parse"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
<method name="parseXmlNode"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="BulkDeleteParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="BulkDeleteParser"
 type="org.rundeck.api.parser.BulkDeleteParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="BulkDeleteParser"
 type="org.rundeck.api.parser.BulkDeleteParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.RundeckJobDeleteBulk"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="DeleteExecutionsResponseParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="DeleteExecutionsResponseParser"
 type="org.rundeck.api.parser.DeleteExecutionsResponseParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.DeleteExecutionsResponse"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="DeleteParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="DeleteParser"
 type="org.rundeck.api.parser.DeleteParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="DeleteParser"
 type="org.rundeck.api.parser.DeleteParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.RundeckJobDelete"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="EventParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="EventParser"
 type="org.rundeck.api.parser.EventParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="EventParser"
 type="org.rundeck.api.parser.EventParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.RundeckEvent"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="ExecutionParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="ExecutionParser"
 type="org.rundeck.api.parser.ExecutionParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="ExecutionParser"
 type="org.rundeck.api.parser.ExecutionParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.RundeckExecution"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="ExecutionStateParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="ExecutionStateParser"
 type="org.rundeck.api.parser.ExecutionStateParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="ExecutionStateParser"
 type="org.rundeck.api.parser.ExecutionStateParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.RundeckExecutionState"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="HistoryParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="HistoryParser"
 type="org.rundeck.api.parser.HistoryParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="HistoryParser"
 type="org.rundeck.api.parser.HistoryParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.RundeckHistory"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="IndexedWorkflowStepStateParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="IndexedWorkflowStepStateParser"
 type="org.rundeck.api.parser.IndexedWorkflowStepStateParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="workflowState" type="org.rundeck.api.domain.WorkflowState">
</parameter>
<parameter name="rundeckNodeName" type="java.lang.String">
</parameter>
</constructor>
<method name="lookupContext"
 return="org.rundeck.api.domain.WorkflowStepState"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stepctx" type="java.lang.String">
</parameter>
<parameter name="initial" type="org.rundeck.api.domain.WorkflowState">
</parameter>
</method>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.WorkflowStepContextState"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="JobParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="JobParser"
 type="org.rundeck.api.parser.JobParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="JobParser"
 type="org.rundeck.api.parser.JobParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.RundeckJob"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="JobsImportResultParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="JobsImportResultParser"
 type="org.rundeck.api.parser.JobsImportResultParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="JobsImportResultParser"
 type="org.rundeck.api.parser.JobsImportResultParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.RundeckJobsImportResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="ListParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="ListParser"
 type="org.rundeck.api.parser.ListParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="parser" type="org.rundeck.api.parser.XmlNodeParser&lt;T&gt;">
</parameter>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="java.util.List&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="NodeParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="NodeParser"
 type="org.rundeck.api.parser.NodeParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="NodeParser"
 type="org.rundeck.api.parser.NodeParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.RundeckNode"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="OutputEntryParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="OutputEntryParser"
 type="org.rundeck.api.parser.OutputEntryParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="OutputEntryParser"
 type="org.rundeck.api.parser.OutputEntryParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseMessage"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="entryNode" type="org.dom4j.Node">
</parameter>
</method>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.RundeckOutputEntry"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="OutputEntryParserV5"
 extends="org.rundeck.api.parser.OutputEntryParser"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="OutputEntryParserV5"
 type="org.rundeck.api.parser.OutputEntryParserV5"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="OutputEntryParserV5"
 type="org.rundeck.api.parser.OutputEntryParserV5"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
</class>
<class name="OutputParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="OutputParser"
 type="org.rundeck.api.parser.OutputParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
<parameter name="parser" type="org.rundeck.api.parser.XmlNodeParser&lt;org.rundeck.api.domain.RundeckOutputEntry&gt;">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.RundeckOutput"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="PagedResultParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="PagedResultParser"
 type="org.rundeck.api.parser.PagedResultParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="itemParser" type="org.rundeck.api.parser.ListParser&lt;T&gt;">
</parameter>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="getXpath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="parseXmlNode"
 return="org.rundeck.api.util.PagedResults&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="ParserHelper"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ParserHelper"
 type="org.rundeck.api.parser.ParserHelper"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="loadDocument"
 return="org.dom4j.Document"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="inputStream" type="java.io.InputStream">
</parameter>
<exception name="RundeckApiException" type="org.rundeck.api.RundeckApiException">
</exception>
</method>
</class>
<class name="ProjectConfigParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="ProjectConfigParser"
 type="org.rundeck.api.parser.ProjectConfigParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="ProjectConfigParser"
 type="org.rundeck.api.parser.ProjectConfigParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="getXpath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.ProjectConfig"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="ProjectConfigPropertyParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="ProjectConfigPropertyParser"
 type="org.rundeck.api.parser.ProjectConfigPropertyParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="ProjectConfigPropertyParser"
 type="org.rundeck.api.parser.ProjectConfigPropertyParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="getXpath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.ConfigProperty"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
<method name="setXpath"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</method>
</class>
<class name="ProjectParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="ProjectParser"
 type="org.rundeck.api.parser.ProjectParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="ProjectParser"
 type="org.rundeck.api.parser.ProjectParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="getXpath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.RundeckProject"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="ProjectParserV11"
 extends="org.rundeck.api.parser.ProjectParser"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ProjectParserV11"
 type="org.rundeck.api.parser.ProjectParserV11"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="ProjectParserV11"
 type="org.rundeck.api.parser.ProjectParserV11"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
</class>
<interface name="ResponseParser"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="parseResponse"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="response" type="java.io.InputStream">
</parameter>
</method>
</interface>
<class name="RundeckTokenParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="RundeckTokenParser"
 type="org.rundeck.api.parser.RundeckTokenParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="RundeckTokenParser"
 type="org.rundeck.api.parser.RundeckTokenParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.RundeckToken"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="SSHKeyResourceParser"
 extends="org.rundeck.api.parser.BaseXpathParser"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="SSHKeyResourceParser"
 type="org.rundeck.api.parser.SSHKeyResourceParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="SSHKeyResourceParser"
 type="org.rundeck.api.parser.SSHKeyResourceParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parse"
 return="org.rundeck.api.domain.KeyResource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="StorageResourceParser"
 extends="org.rundeck.api.parser.BaseXpathParser"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="StorageResourceParser"
 type="org.rundeck.api.parser.StorageResourceParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="StorageResourceParser"
 type="org.rundeck.api.parser.StorageResourceParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<constructor name="StorageResourceParser"
 type="org.rundeck.api.parser.StorageResourceParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="holder" type="org.rundeck.api.domain.BaseStorageResource">
</parameter>
</constructor>
<method name="parse"
 return="org.rundeck.api.domain.StorageResource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="StringParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="StringParser"
 type="org.rundeck.api.parser.StringParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="StringParser"
 type="org.rundeck.api.parser.StringParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="SystemInfoParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="SystemInfoParser"
 type="org.rundeck.api.parser.SystemInfoParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="SystemInfoParser"
 type="org.rundeck.api.parser.SystemInfoParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.RundeckSystemInfo"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="WorkflowStateParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="WorkflowStateParser"
 type="org.rundeck.api.parser.WorkflowStateParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="WorkflowStateParser"
 type="org.rundeck.api.parser.WorkflowStateParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseDate"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="s" type="java.lang.String">
</parameter>
</method>
<method name="parseWorkflowState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="targetNode" type="org.dom4j.Node">
</parameter>
<parameter name="state" type="org.rundeck.api.domain.WorkflowState">
</parameter>
</method>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.WorkflowState"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="WorkflowStepContextStateParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="WorkflowStepContextStateParser"
 type="org.rundeck.api.parser.WorkflowStepContextStateParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="inherit" type="org.rundeck.api.domain.WorkflowStepContextState">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.WorkflowStepContextState"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<class name="WorkflowStepStateParser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.rundeck.api.parser.XmlNodeParser">
</implements>
<constructor name="WorkflowStepStateParser"
 type="org.rundeck.api.parser.WorkflowStepStateParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="WorkflowStepStateParser"
 type="org.rundeck.api.parser.WorkflowStepStateParser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xpath" type="java.lang.String">
</parameter>
</constructor>
<method name="parseXmlNode"
 return="org.rundeck.api.domain.WorkflowStepState"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</class>
<interface name="XmlNodeParser"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="parseXmlNode"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="node" type="org.dom4j.Node">
</parameter>
</method>
</interface>
</package>
<package name="org.rundeck.api.query"
>
<class name="ExecutionQuery"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="builder"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAbortedby"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAdhoc"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBegin"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEnd"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExcludeGroupPath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExcludeGroupPathExact"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExcludeJob"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExcludeJobExact"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExcludeJobIdList"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExcludeJobList"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getGroupPath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getGroupPathExact"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getJob"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getJobExact"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getJobIdList"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getJobList"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getProject"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRecent"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStatus"
 return="org.rundeck.api.domain.RundeckExecution.ExecutionStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUser"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="notBlank"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="ExecutionQuery.Builder"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ExecutionQuery.Builder"
 type="org.rundeck.api.query.ExecutionQuery.Builder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="abortedby"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="abortedby" type="java.lang.String">
</parameter>
</method>
<method name="adhoc"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="adhoc" type="java.lang.Boolean">
</parameter>
</method>
<method name="begin"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="begin" type="java.util.Date">
</parameter>
</method>
<method name="build"
 return="org.rundeck.api.query.ExecutionQuery"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="description"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="end"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="end" type="java.util.Date">
</parameter>
</method>
<method name="excludeGroupPath"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="excludeGroupPath" type="java.lang.String">
</parameter>
</method>
<method name="excludeGroupPathExact"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="excludeGroupPathExact" type="java.lang.String">
</parameter>
</method>
<method name="excludeJob"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="job" type="java.lang.String">
</parameter>
</method>
<method name="excludeJobExact"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="exact" type="java.lang.String">
</parameter>
</method>
<method name="excludeJobIdList"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="list" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="excludeJobList"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="list" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="groupPath"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
</method>
<method name="groupPathExact"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="exact" type="java.lang.String">
</parameter>
</method>
<method name="job"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="job" type="java.lang.String">
</parameter>
</method>
<method name="jobExact"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="exact" type="java.lang.String">
</parameter>
</method>
<method name="jobIdList"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="list" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="jobList"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="list" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="project"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="project" type="java.lang.String">
</parameter>
</method>
<method name="recent"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="recent" type="java.lang.String">
</parameter>
</method>
<method name="status"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="status" type="org.rundeck.api.domain.RundeckExecution.ExecutionStatus">
</parameter>
</method>
<method name="user"
 return="org.rundeck.api.query.ExecutionQuery.Builder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="java.lang.String">
</parameter>
</method>
</class>
</package>
<package name="org.rundeck.api.util"
>
<class name="AssertUtil"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AssertUtil"
 type="org.rundeck.api.util.AssertUtil"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="inList"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="errorMessage" type="java.lang.String">
</parameter>
<parameter name="value" type="java.lang.Object">
</parameter>
<parameter name="list" type="java.lang.Object...">
</parameter>
</method>
<method name="inList"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="errorMessage" type="java.lang.String">
</parameter>
<parameter name="value" type="java.lang.Object">
</parameter>
<parameter name="list" type="java.util.List&lt;java.lang.Object&gt;">
</parameter>
</method>
<method name="notBlank"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input" type="java.lang.String">
</parameter>
<parameter name="errorMessage" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
</method>
<method name="notNull"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="object" type="java.lang.Object">
</parameter>
<parameter name="errorMessage" type="java.lang.String">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
</method>
</class>
<class name="DocumentContentProducer"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DocumentContentProducer"
 type="org.rundeck.api.util.DocumentContentProducer"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="document" type="org.dom4j.Document">
</parameter>
</constructor>
<constructor name="DocumentContentProducer"
 type="org.rundeck.api.util.DocumentContentProducer"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="document" type="org.dom4j.Document">
</parameter>
<parameter name="format" type="org.dom4j.io.OutputFormat">
</parameter>
</constructor>
<method name="writeTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="outstream" type="java.io.OutputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
</method>
</class>
<interface name="PagedResults"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.Iterable">
</implements>
<method name="getCount"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMax"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOffset"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResults"
 return="java.util.List&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTotal"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="ParametersUtil"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ParametersUtil"
 type="org.rundeck.api.util.ParametersUtil"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="generateArgString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="options" type="java.util.Properties">
</parameter>
</method>
<method name="generateNodeFiltersString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="nodeFilters" type="java.util.Properties">
</parameter>
</method>
<method name="urlEncode"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input" type="java.lang.String">
</parameter>
</method>
</class>
</package>
</api>
